# General
# =======
# - output_folder: Used as output folder
output_folder: Crooke_Anikin_L_1_sharp

# Meshes
# ======
# - meshes: List of input meshes in h5 format to run simulations on
meshes:

    #- ./mesh/sharp_anikin_L1_0,6.h5
    #- ./mesh/sharp_anikin_L1_0,4.h5
    - ./mesh/sharp_anikin_L1_0,3.h5
   # - ./mesh/sharp_anikin_L1_0,2.h5


# Numerical Parameters
# ====================
# - elements: Must contain the fields: theta, s, p, u, sigma
#   - fields: List of FEM parameters (shape, degree)
#     - shape: Element shape, e.g. Lagrange
#     - degree: Element degree, e.g. 2
# - stabilization: Must contain cip and gls
#   - cip: Collection of Continous Interior Penalty (CIP) parameters
#     - enable: Enable CIP stabilization
#     - delta_theta: Stabilization of grad(T)*grad(T_test) over edge
#     - delta_u: Stabilization of grad(u)*grad(u_test) over edge
#     - delta_p: Stabilization of grad(p)*grad(p_test) over edge
#   - gls: Collection of Garlerkin Least Squares (GLS) parameters
#     - enable: Enable GLS stabilization
#     - tau_energy: Stabilization with energy eq. residual
#     - tau_heatflux: Stabilization with heatflux eq. residual
#     - tau_mass: Stabilization with mass eq. residual
#     - tau_momentum: Stabilization with momentum eq. residual
#     - tau_stress: Stabilization with stress eq. residual
elements:
  theta:
    shape: Lagrange
    degree: 1
  s:
    shape: Lagrange
    degree: 1
  p:
    shape: Lagrange
    degree: 1
  u:
    shape: Lagrange
    degree: 1
  sigma:
    shape: Lagrange
    degree: 1
stabilization:
  cip:
    enable: False
    delta_theta: 1.0
    delta_u: 1.0
    delta_p: 0.01
  gls:
    enable: True
    tau_energy: 0.1
    tau_heatflux: 0.1
    tau_mass: 0.1
    tau_momentum: 0.1
    tau_stress: 0.1

# Formulation Parameters
# ======================
# - nsd: Number of spatial dimensions == 2
# - mode: Formulation mode, one of heat, stress, r13
# - heat_source: Heat source function for mode==heat||r13
# - mass_source: Mass source function for mode==stress||r13
# - body_force: Body force for mode==stress||r13
# - f_s: Heatflux force for mode==heat||r13
# - f_sigma: Stress force for mode==stress||r13
nsd: 2
mode: r13
heat_source: 0
mass_source: 0
body_force: [0,0]
f_s: [0,0]
f_sigma: [[0,0],[0,0]]

# PETSc Options (dictionary)
# ==========================
# [#1 e.g. for mumps directy solver:]
# - ksp_type: preonly  # preconditioner only, i.e. 1 application
# - pc_type: lu  # use LU as preconditioner <=> direct solve
# - pc_factor_mat_solver_type: mumps  # use mumps sparse solver
# [#2 e.g. for gmres iterative solver with icc preconditioner:]
# - ksp_type: gmres  # Generalized Minimal Residual Method
# - pc_type: icc  # incomplete Cholesky
petsc_options:
  ksp_type: preonly
  pc_type: lu
  pc_factor_mat_solver_type: mumps

# Region Parameters
# =================
# - regs: Dictionary of all mesh regions
#   - reg_id: Must contain the following parameters:
#     - kn: Knudsen number
regs:
  10007: #INNER
    kn: 0.2

# Boundary Conditions
# ===================
# - bcs: Dictionary of all boundary IDs from mesh
#   - bc_id: must contain the following parameters
#     - chi_tilde: Refaction coefficient in Maxwell accomodation model
#     - theta_w: Value for temperature at wall
#     - u_t_w: Value for tangential velocity at wall
#     - u_n_w: Value for normal velocity at wall
#     - p_w: Value for pressure at wall
#     - epsilon_w: Inflow-model parameter <=> Weight of pressure prescription
polar_coord_syst: True
bcs:
  10002: #Outer
    chi_tilde: 1.0
    theta_w: 1
    u_t_w: 0
    u_n_w: 0
    u_x_w: 1E300
    u_y_w: 1E300
    u_z_w: 1E300
    p_w: 0
    epsilon_w: 0

  10001: #HOT
    chi_tilde: 1.0
    theta_w: 1.66
    u_t_w: 0
    u_n_w: 0
    u_x_w: 1E300
    u_y_w: 1E300
    u_z_w: 1E300
    p_w: 0
    epsilon_w: 0

  1000: #COLD
    chi_tilde: 1.0
    theta_w: 1
    u_t_w: 0
    u_n_w: 0
    u_x_w: 1E300
    u_y_w: 1E300
    u_z_w: 1E300
    p_w: 0
    epsilon_w: 0

  10003: #Trans X-Top
    chi_tilde: 1.0
    theta_w: 1.33 - 0.66/(0.2)*(x[0])
    u_t_w: 0
    u_n_w: 0
    u_x_w: 1E300
    u_y_w: 1E300
    u_z_w: 1E300
    p_w: 0
    epsilon_w: 0

  10004: #Trans X-Bottom
    chi_tilde: 1.0
    theta_w: 1.33 + 0.66/(0.2)*(x[0])
    u_t_w: 0
    u_n_w: 0
    u_x_w: 1E300
    u_y_w: 1E300
    u_z_w: 1E300
    p_w: 0
    epsilon_w: 0

  10005: #Trans Y-left
    chi_tilde: 1.0
    theta_w: 1.33 - 0.66/(0.2)*(x[1])
    u_t_w: 0
    u_n_w: 0
    u_x_w: 1E300
    u_y_w: 1E300
    u_z_w: 1E300
    p_w: 0
    epsilon_w: 0

  10006: #Trans Y-right
    chi_tilde: 1.0
    theta_w: 1.33 + 0.66/(0.2)*(x[1])
    u_t_w: 0
    u_n_w: 0
    u_x_w: 1E300
    u_y_w: 1E300
    u_z_w: 1E300
    p_w: 0
    epsilon_w: 0

# Convergence Study
# =================
# - enable: Enable convergence study on given meshes
# - exact_solution: Path to exact solution in cpp-format to compare errors
# - plot: Show errors in matplotlib window. PDF output is always per default.
# - write_systemmatrix: Writes out systemmatrix (LHS) to use for analysis
# - write_mpi_information: Write dofmap and ownership info per rank
# - rescale_pressure: Shift numerical pressure (False,zeromean,zerominimum)
# - relative_errors: Use relative errors. If exact sol. is zero, use absolute.
convergence_study:
  enable: False
  exact_solution: esols/1_coeffs_nosources_norot_inflow_positive.cpp
  plot: False
  write_systemmatrix: False
  write_mpi_information: False
  rescale_pressure: zeromean
  relative_error: True

# Postprocessing
# ==============
# - write_pdfs: Write all solution fields as PDF plot
# - write_vecs: Write all solution fields as vectors
# - flows: List of BC IDs for <mass|heat> flow J=int_bc dot(<u|s>,n)dl
# - line_integrals: List of line integral dicts:
#   - name: Name for output
#   - expr: Expression to evaluate
#   - start: Start point
#   - end: End point
#   - res: Sampling resolution of line
postprocessing:
  write_pdfs: False
  write_vecs: False
  flows: []
  line_integrals:
    - name: "Right Vane Moment without kn"
      expr: (p + sigmaxx)*x[0]
      start: [ 0.1,0.1 ]
      end: [ 1.1,0.1 ]
      res: 10000

    - name: "Left Vane Moment without kn"
      expr: (p + sigmayy)*x[1]
      start: [ 0.1,0.1 ]
      end: [ 0.1,1.1 ]
      res: 10000


# Parameter Study
# ==============
# - enable: Repeat simulation with different p. values (study)
# - parameter_key: Key as list, e.g. ["elemenets", "p", "degree"]
# - parameter_values: List of value for parameter, e.g. [0.01,0.1,1,10]
parameter_study:
  enable: True
  parameter_key: ["regs",10007,"kn"]
  parameter_values: [0.125,0.2,0.25,0.333]
